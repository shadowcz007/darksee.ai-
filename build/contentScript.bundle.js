/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/contentScript.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/contentScript.js":
/*!*********************************!*\
  !*** ./src/js/contentScript.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//import EventEmitter from 'events'\n\n// import { Segment, useDefault, cnPOSTag, enPOSTag } from './lib/segmentit.js';\n// import FlexSearch from './lib/flexsearch.min.js';\n// const segmentit = useDefault(new Segment());\n// const searchIndex = new FlexSearch();\n// console.log(FlexSearch)\n// segmentit.doSegment('一人得道，鸡犬升天',{\n//     stripPunctuation: true\n//   }).map(i => {\n//     console.log(i,cnPOSTag(i.p),enPOSTag(i.p))\n// });\n\n\n\n\n// let bg = chrome.extension.getBackgroundPage();\n\n\n//整理入库\nfunction updateContent(callback) {\n    let contents = (Array.from(document.querySelectorAll('*[data-lake-id]'), (element) => {\n        let id = element.getAttribute('data-lake-id'),\n            text = element.innerText.trim();\n        if (text && text.length > 0) {\n            return {\n                id: id,\n                text: text,\n                ref: {\n                    url: window.location.href,\n                    title: document.title,\n                    favIconUrl: \"\"\n                }\n            }\n        }\n    })).filter(t => !!t);\n\n    chrome.runtime.sendMessage({ update: contents }, function(response) {\n        callback(response);\n    });\n};\n\n\n\n//新增一条记录到知识库\nfunction newText(text, callback) {\n    let dict = {\n        id: (new Date()).getTime().toString(),\n        text: text,\n        ref: {\n            url: window.location.href,\n            title: document.title,\n            favIconUrl: \"\"\n        }\n    };\n    //console.log([dict])\n    chrome.runtime.sendMessage({ update: [dict] }, function(response) {\n        callback(response);\n    });\n};\n\n\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n    // console.log(sender.tab ?\"from a content script:\" + sender.tab.url :\"from the extension\");\n    if (request.insert) {\n        //console.log('插入文档:',request.insert);\n        insertText(request.insert.text);\n        //document.querySelector('*[data-lake-id=\"'+request.targetId+'\"]').innerText+='\\n'+request.insert.text;\n    } else if (request.isTargetSite) {\n        isInsertTargetSite((r) => {\n            sendResponse(r);\n        });\n    }\n    // sendResponse('我收到了你的消息！');\n    return true;\n});\n\n\n//TODO 暂只支持从前往后的划选，从后往前的暂不支持\nfunction insertText(text) {\n    let select = document.getSelection();\n    var s = select.focusNode.textContent.slice(0, document.getSelection().focusOffset);\n    var e = document.getSelection().focusNode.textContent.slice(document.getSelection().focusOffset, document.getSelection().focusNode.textContent.length);\n\n    document.getSelection().focusNode.textContent = s + \"<span style='border-left: 4px solid #03A9F4;border-radius: 12px;padding: 0 8px;border-right: 4px solid #2196F3;'>\" + text + \"</span>\" + e;\n\n    document.getSelection().focusNode.parentElement.innerHTML = document.getSelection().focusNode.parentElement.innerText;\n\n}\n\n\nfunction findParentElementId(element) {\n    let id = element.getAttribute('data-lake-id');\n    if (!id && element.parentElement) {\n        id = findParentElementId(element.parentElement);\n    };\n    return id;\n};\n\n\n\n//绑定划选时间，用于调取知识\nfunction bindSelect() {\n    //console.log(\"-----运行-----bindSelect\")\n    //划选\n    //let countTime=(new Date()).getTime();\n\n    document.addEventListener(\"mouseup\", e => {\n        e.preventDefault();\n\n        let s = document.getSelection();\n\n        //非划选 只是点击的时候 不执行\n        if (s.isCollapsed == true) return;\n        //console.log(\"监听\",s.focusNode)\n        let t = null;\n\n        if (s.focusNode && s.focusNode.data) {\n            t = s.focusNode.data.slice(s.anchorOffset, s.extentOffset).trim();\n        };\n\n        if (!t && s.baseNode && s.baseNode.data) {\n            t = s.baseNode.data.trim();\n        };\n\n        //console.log(t);\n        if (t && t.length > 1) {\n            chrome.runtime.sendMessage({\n                find: t,\n                //targetId:targetId\n            }, function(response) {\n                //console.log('收到来自后台的回复：' ,response);\n            });\n        };\n\n    });\n    //  document.onselectionchange = () => {\n    //      //console.log((new Date()).getTime(),countTime)\n    //     //  if((new Date()).getTime()-countTime<6000) return console.log(\"----暂不搜索-----\");\n    //     //  countTime=(new Date()).getTime();\n    //     isSelecting=true;\n    //     chrome.runtime.sendMessage({\n    //         reset:true\n    //     }, function(response) {\n    //         console.log('收到来自后台的回复：' ,response);\n    //     });\n    //  };\n};\n\n//判断页面的域名，调取对应的高亮功能\nfunction isHighlightSite() {\n    let host = window.location.host;\n\n    chrome.runtime.sendMessage({\n        highlight: host,\n        html: document.body.innerHTML\n    }, function(response) {\n        console.log('isHighlightSite', response);\n        if (response && response.length > 0) {\n\n            chrome.runtime.sendMessage({\n                setBadge: 'KD',\n            }, function(response) {\n                //console.log('收到来自后台的回复：' ,response);\n            });\n\n            // alert(`发现${response.length}条`);\n            let texts = Array.from(document.body.querySelectorAll(response[0].query), t => { return t });\n            for (let index = 0; index < response.length; index++) {\n                const element = response[index];\n                // texts[element.id].classList.add('auto-knowledge-find-result');\n                // texts[element.id].setAttribute(\"auto-knowledge-score\",element.score);\n                texts[element.id].removeEventListener('click', add2Knowledge);\n                texts[element.id].addEventListener(\"click\", add2Knowledge);\n                texts[element.id].style.backgroundColor = `rgba(255,255,0,0.3)`;\n                texts[element.id].style.cursor = `copy`;\n            }\n        }\n\n    });\n\n};\n\n//进库\nfunction add2Knowledge(e) {\n    e.preventDefault();\n    let t = e.target.innerText.trim();\n    console.log(t)\n    newText(t, res => {\n        console.log(res);\n    });\n};\n\n//是否写作的目标网站\nfunction isInsertTargetSite(callback) {\n    // console.log(window.location.protocol == \"chrome-extension:\")\n    if (window.location.protocol == \"chrome-extension:\") return callback(true);\n    chrome.runtime.sendMessage({\n        isTargetSite: window.location.href,\n    }, function(response) {\n        //console.log('收到来自后台的回复：' ,response);\n        if (response) {\n            localStorage.setItem(\"isInsert\", response);\n        };\n        callback(response);\n    });\n\n}\n\n\n\nfunction init() {\n    //各网页都监控\n    //划选\n    //TODO bug 发现百度搜索上面划选仅靠focusNode是获取不全的,换成获取剪切板的实现\n\n    // document.onselectionchange = () => {\n    //     let s=document.getSelection();\n    //     console.log(s)\n    //     if(s.focusNode.data){\n    //         if(s.anchorOffset<s.extentOffset){\n    //             copyText= s.focusNode.data.slice(s.anchorOffset,s.extentOffset).trim();\n    //         }else{\n    //             copyText= s.focusNode.data.slice(s.extentOffset,s.anchorOffset).trim();\n    //         };\n    //         // console.log(copyText)\n    //     }\n    // };\n    let runningText = null;\n    document.body.addEventListener(\"keydown\", function(e) {\n        var keyCode = e.keyCode || e.which || e.charCode;\n        var ctrlKey = e.ctrlKey || e.metaKey;\n        //console.log('copy------',keyCode)\n        if (ctrlKey && keyCode == 67) {\n            chrome.runtime.sendMessage({\n                getClipboardData: true\n            }, function(text) {\n                if (text && runningText != text) {\n                    runningText = text;\n                    newText(text, (r) => {\n                        //\n                    });\n                };\n            });\n        };\n    }, false);\n\n\n    if (document.querySelector('.lake-content-editor-core')) {\n\n        //由用户主动触发,ctrl(cmd)+s\n        document.querySelector('.lake-content-editor-core').addEventListener(\"keydown\", function(e) {\n            var keyCode = e.keyCode || e.which || e.charCode;\n            var ctrlKey = e.ctrlKey || e.metaKey;\n            if (ctrlKey && keyCode == 83) {\n                updateContent((res) => {});\n            };\n        }, false);\n\n        chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n            //主动触发新素材入库\n            if (request.cmd == 'updateFromContent') {\n                updateContent((res) => {\n                    console.log(res)\n                });\n            } else {\n                //suggestTopicTags\n                sendResponse(document.body.innerText.trim());\n            }\n            return true;\n        });\n\n    } else {\n        setTimeout(init, 1000);\n    };\n\n\n\n};\n\nwindow.onload = function() {\n    console.log(window.location)\n    if (window.location.protocol != \"chrome-extension:\") {\n        init();\n        bindSelect();\n        isHighlightSite();\n        isInsertTargetSite((r) => {\n            //console.log(r);\n        });\n    }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY29udGVudFNjcmlwdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9jb250ZW50U2NyaXB0LmpzPzRlZjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy9pbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJ2V2ZW50cydcblxuLy8gaW1wb3J0IHsgU2VnbWVudCwgdXNlRGVmYXVsdCwgY25QT1NUYWcsIGVuUE9TVGFnIH0gZnJvbSAnLi9saWIvc2VnbWVudGl0LmpzJztcbi8vIGltcG9ydCBGbGV4U2VhcmNoIGZyb20gJy4vbGliL2ZsZXhzZWFyY2gubWluLmpzJztcbi8vIGNvbnN0IHNlZ21lbnRpdCA9IHVzZURlZmF1bHQobmV3IFNlZ21lbnQoKSk7XG4vLyBjb25zdCBzZWFyY2hJbmRleCA9IG5ldyBGbGV4U2VhcmNoKCk7XG4vLyBjb25zb2xlLmxvZyhGbGV4U2VhcmNoKVxuLy8gc2VnbWVudGl0LmRvU2VnbWVudCgn5LiA5Lq65b6X6YGT77yM6bih54qs5Y2H5aSpJyx7XG4vLyAgICAgc3RyaXBQdW5jdHVhdGlvbjogdHJ1ZVxuLy8gICB9KS5tYXAoaSA9PiB7XG4vLyAgICAgY29uc29sZS5sb2coaSxjblBPU1RhZyhpLnApLGVuUE9TVGFnKGkucCkpXG4vLyB9KTtcblxuXG5cblxuLy8gbGV0IGJnID0gY2hyb21lLmV4dGVuc2lvbi5nZXRCYWNrZ3JvdW5kUGFnZSgpO1xuXG5cbi8v5pW055CG5YWl5bqTXG5mdW5jdGlvbiB1cGRhdGVDb250ZW50KGNhbGxiYWNrKSB7XG4gICAgbGV0IGNvbnRlbnRzID0gKEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnKltkYXRhLWxha2UtaWRdJyksIChlbGVtZW50KSA9PiB7XG4gICAgICAgIGxldCBpZCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWxha2UtaWQnKSxcbiAgICAgICAgICAgIHRleHQgPSBlbGVtZW50LmlubmVyVGV4dC50cmltKCk7XG4gICAgICAgIGlmICh0ZXh0ICYmIHRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgdGV4dDogdGV4dCxcbiAgICAgICAgICAgICAgICByZWY6IHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZixcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGRvY3VtZW50LnRpdGxlLFxuICAgICAgICAgICAgICAgICAgICBmYXZJY29uVXJsOiBcIlwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSkpLmZpbHRlcih0ID0+ICEhdCk7XG5cbiAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7IHVwZGF0ZTogY29udGVudHMgfSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgY2FsbGJhY2socmVzcG9uc2UpO1xuICAgIH0pO1xufTtcblxuXG5cbi8v5paw5aKe5LiA5p2h6K6w5b2V5Yiw55+l6K+G5bqTXG5mdW5jdGlvbiBuZXdUZXh0KHRleHQsIGNhbGxiYWNrKSB7XG4gICAgbGV0IGRpY3QgPSB7XG4gICAgICAgIGlkOiAobmV3IERhdGUoKSkuZ2V0VGltZSgpLnRvU3RyaW5nKCksXG4gICAgICAgIHRleHQ6IHRleHQsXG4gICAgICAgIHJlZjoge1xuICAgICAgICAgICAgdXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZixcbiAgICAgICAgICAgIHRpdGxlOiBkb2N1bWVudC50aXRsZSxcbiAgICAgICAgICAgIGZhdkljb25Vcmw6IFwiXCJcbiAgICAgICAgfVxuICAgIH07XG4gICAgLy9jb25zb2xlLmxvZyhbZGljdF0pXG4gICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UoeyB1cGRhdGU6IFtkaWN0XSB9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICBjYWxsYmFjayhyZXNwb25zZSk7XG4gICAgfSk7XG59O1xuXG5cbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihmdW5jdGlvbihyZXF1ZXN0LCBzZW5kZXIsIHNlbmRSZXNwb25zZSkge1xuICAgIC8vIGNvbnNvbGUubG9nKHNlbmRlci50YWIgP1wiZnJvbSBhIGNvbnRlbnQgc2NyaXB0OlwiICsgc2VuZGVyLnRhYi51cmwgOlwiZnJvbSB0aGUgZXh0ZW5zaW9uXCIpO1xuICAgIGlmIChyZXF1ZXN0Lmluc2VydCkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKCfmj5LlhaXmlofmoaM6JyxyZXF1ZXN0Lmluc2VydCk7XG4gICAgICAgIGluc2VydFRleHQocmVxdWVzdC5pbnNlcnQudGV4dCk7XG4gICAgICAgIC8vZG9jdW1lbnQucXVlcnlTZWxlY3RvcignKltkYXRhLWxha2UtaWQ9XCInK3JlcXVlc3QudGFyZ2V0SWQrJ1wiXScpLmlubmVyVGV4dCs9J1xcbicrcmVxdWVzdC5pbnNlcnQudGV4dDtcbiAgICB9IGVsc2UgaWYgKHJlcXVlc3QuaXNUYXJnZXRTaXRlKSB7XG4gICAgICAgIGlzSW5zZXJ0VGFyZ2V0U2l0ZSgocikgPT4ge1xuICAgICAgICAgICAgc2VuZFJlc3BvbnNlKHIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gc2VuZFJlc3BvbnNlKCfmiJHmlLbliLDkuobkvaDnmoTmtojmga/vvIEnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbn0pO1xuXG5cbi8vVE9ETyDmmoLlj6rmlK/mjIHku47liY3lvoDlkI7nmoTliJLpgInvvIzku47lkI7lvoDliY3nmoTmmoLkuI3mlK/mjIFcbmZ1bmN0aW9uIGluc2VydFRleHQodGV4dCkge1xuICAgIGxldCBzZWxlY3QgPSBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKTtcbiAgICB2YXIgcyA9IHNlbGVjdC5mb2N1c05vZGUudGV4dENvbnRlbnQuc2xpY2UoMCwgZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkuZm9jdXNPZmZzZXQpO1xuICAgIHZhciBlID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkuZm9jdXNOb2RlLnRleHRDb250ZW50LnNsaWNlKGRvY3VtZW50LmdldFNlbGVjdGlvbigpLmZvY3VzT2Zmc2V0LCBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKS5mb2N1c05vZGUudGV4dENvbnRlbnQubGVuZ3RoKTtcblxuICAgIGRvY3VtZW50LmdldFNlbGVjdGlvbigpLmZvY3VzTm9kZS50ZXh0Q29udGVudCA9IHMgKyBcIjxzcGFuIHN0eWxlPSdib3JkZXItbGVmdDogNHB4IHNvbGlkICMwM0E5RjQ7Ym9yZGVyLXJhZGl1czogMTJweDtwYWRkaW5nOiAwIDhweDtib3JkZXItcmlnaHQ6IDRweCBzb2xpZCAjMjE5NkYzOyc+XCIgKyB0ZXh0ICsgXCI8L3NwYW4+XCIgKyBlO1xuXG4gICAgZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkuZm9jdXNOb2RlLnBhcmVudEVsZW1lbnQuaW5uZXJIVE1MID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkuZm9jdXNOb2RlLnBhcmVudEVsZW1lbnQuaW5uZXJUZXh0O1xuXG59XG5cblxuZnVuY3Rpb24gZmluZFBhcmVudEVsZW1lbnRJZChlbGVtZW50KSB7XG4gICAgbGV0IGlkID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbGFrZS1pZCcpO1xuICAgIGlmICghaWQgJiYgZWxlbWVudC5wYXJlbnRFbGVtZW50KSB7XG4gICAgICAgIGlkID0gZmluZFBhcmVudEVsZW1lbnRJZChlbGVtZW50LnBhcmVudEVsZW1lbnQpO1xuICAgIH07XG4gICAgcmV0dXJuIGlkO1xufTtcblxuXG5cbi8v57uR5a6a5YiS6YCJ5pe26Ze077yM55So5LqO6LCD5Y+W55+l6K+GXG5mdW5jdGlvbiBiaW5kU2VsZWN0KCkge1xuICAgIC8vY29uc29sZS5sb2coXCItLS0tLei/kOihjC0tLS0tYmluZFNlbGVjdFwiKVxuICAgIC8v5YiS6YCJXG4gICAgLy9sZXQgY291bnRUaW1lPShuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBlID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGxldCBzID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7XG5cbiAgICAgICAgLy/pnZ7liJLpgIkg5Y+q5piv54K55Ye755qE5pe25YCZIOS4jeaJp+ihjFxuICAgICAgICBpZiAocy5pc0NvbGxhcHNlZCA9PSB0cnVlKSByZXR1cm47XG4gICAgICAgIC8vY29uc29sZS5sb2coXCLnm5HlkKxcIixzLmZvY3VzTm9kZSlcbiAgICAgICAgbGV0IHQgPSBudWxsO1xuXG4gICAgICAgIGlmIChzLmZvY3VzTm9kZSAmJiBzLmZvY3VzTm9kZS5kYXRhKSB7XG4gICAgICAgICAgICB0ID0gcy5mb2N1c05vZGUuZGF0YS5zbGljZShzLmFuY2hvck9mZnNldCwgcy5leHRlbnRPZmZzZXQpLnRyaW0oKTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoIXQgJiYgcy5iYXNlTm9kZSAmJiBzLmJhc2VOb2RlLmRhdGEpIHtcbiAgICAgICAgICAgIHQgPSBzLmJhc2VOb2RlLmRhdGEudHJpbSgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vY29uc29sZS5sb2codCk7XG4gICAgICAgIGlmICh0ICYmIHQubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgIGZpbmQ6IHQsXG4gICAgICAgICAgICAgICAgLy90YXJnZXRJZDp0YXJnZXRJZFxuICAgICAgICAgICAgfSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCfmlLbliLDmnaXoh6rlkI7lj7DnmoTlm57lpI3vvJonICxyZXNwb25zZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgIH0pO1xuICAgIC8vICBkb2N1bWVudC5vbnNlbGVjdGlvbmNoYW5nZSA9ICgpID0+IHtcbiAgICAvLyAgICAgIC8vY29uc29sZS5sb2coKG5ldyBEYXRlKCkpLmdldFRpbWUoKSxjb3VudFRpbWUpXG4gICAgLy8gICAgIC8vICBpZigobmV3IERhdGUoKSkuZ2V0VGltZSgpLWNvdW50VGltZTw2MDAwKSByZXR1cm4gY29uc29sZS5sb2coXCItLS0t5pqC5LiN5pCc57SiLS0tLS1cIik7XG4gICAgLy8gICAgIC8vICBjb3VudFRpbWU9KG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcbiAgICAvLyAgICAgaXNTZWxlY3Rpbmc9dHJ1ZTtcbiAgICAvLyAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgIC8vICAgICAgICAgcmVzZXQ6dHJ1ZVxuICAgIC8vICAgICB9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coJ+aUtuWIsOadpeiHquWQjuWPsOeahOWbnuWkje+8micgLHJlc3BvbnNlKTtcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gIH07XG59O1xuXG4vL+WIpOaWremhtemdoueahOWfn+WQje+8jOiwg+WPluWvueW6lOeahOmrmOS6ruWKn+iDvVxuZnVuY3Rpb24gaXNIaWdobGlnaHRTaXRlKCkge1xuICAgIGxldCBob3N0ID0gd2luZG93LmxvY2F0aW9uLmhvc3Q7XG5cbiAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XG4gICAgICAgIGhpZ2hsaWdodDogaG9zdCxcbiAgICAgICAgaHRtbDogZG9jdW1lbnQuYm9keS5pbm5lckhUTUxcbiAgICB9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnaXNIaWdobGlnaHRTaXRlJywgcmVzcG9uc2UpO1xuICAgICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2UubGVuZ3RoID4gMCkge1xuXG4gICAgICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgc2V0QmFkZ2U6ICdLRCcsXG4gICAgICAgICAgICB9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ+aUtuWIsOadpeiHquWQjuWPsOeahOWbnuWkje+8micgLHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBhbGVydChg5Y+R546wJHtyZXNwb25zZS5sZW5ndGh95p2hYCk7XG4gICAgICAgICAgICBsZXQgdGV4dHMgPSBBcnJheS5mcm9tKGRvY3VtZW50LmJvZHkucXVlcnlTZWxlY3RvckFsbChyZXNwb25zZVswXS5xdWVyeSksIHQgPT4geyByZXR1cm4gdCB9KTtcbiAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCByZXNwb25zZS5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gcmVzcG9uc2VbaW5kZXhdO1xuICAgICAgICAgICAgICAgIC8vIHRleHRzW2VsZW1lbnQuaWRdLmNsYXNzTGlzdC5hZGQoJ2F1dG8ta25vd2xlZGdlLWZpbmQtcmVzdWx0Jyk7XG4gICAgICAgICAgICAgICAgLy8gdGV4dHNbZWxlbWVudC5pZF0uc2V0QXR0cmlidXRlKFwiYXV0by1rbm93bGVkZ2Utc2NvcmVcIixlbGVtZW50LnNjb3JlKTtcbiAgICAgICAgICAgICAgICB0ZXh0c1tlbGVtZW50LmlkXS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGFkZDJLbm93bGVkZ2UpO1xuICAgICAgICAgICAgICAgIHRleHRzW2VsZW1lbnQuaWRdLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhZGQyS25vd2xlZGdlKTtcbiAgICAgICAgICAgICAgICB0ZXh0c1tlbGVtZW50LmlkXS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBgcmdiYSgyNTUsMjU1LDAsMC4zKWA7XG4gICAgICAgICAgICAgICAgdGV4dHNbZWxlbWVudC5pZF0uc3R5bGUuY3Vyc29yID0gYGNvcHlgO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9KTtcblxufTtcblxuLy/ov5vlupNcbmZ1bmN0aW9uIGFkZDJLbm93bGVkZ2UoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBsZXQgdCA9IGUudGFyZ2V0LmlubmVyVGV4dC50cmltKCk7XG4gICAgY29uc29sZS5sb2codClcbiAgICBuZXdUZXh0KHQsIHJlcyA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgfSk7XG59O1xuXG4vL+aYr+WQpuWGmeS9nOeahOebruagh+e9keermVxuZnVuY3Rpb24gaXNJbnNlcnRUYXJnZXRTaXRlKGNhbGxiYWNrKSB7XG4gICAgLy8gY29uc29sZS5sb2cod2luZG93LmxvY2F0aW9uLnByb3RvY29sID09IFwiY2hyb21lLWV4dGVuc2lvbjpcIilcbiAgICBpZiAod2luZG93LmxvY2F0aW9uLnByb3RvY29sID09IFwiY2hyb21lLWV4dGVuc2lvbjpcIikgcmV0dXJuIGNhbGxiYWNrKHRydWUpO1xuICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgaXNUYXJnZXRTaXRlOiB3aW5kb3cubG9jYXRpb24uaHJlZixcbiAgICB9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKCfmlLbliLDmnaXoh6rlkI7lj7DnmoTlm57lpI3vvJonICxyZXNwb25zZSk7XG4gICAgICAgIGlmIChyZXNwb25zZSkge1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJpc0luc2VydFwiLCByZXNwb25zZSk7XG4gICAgICAgIH07XG4gICAgICAgIGNhbGxiYWNrKHJlc3BvbnNlKTtcbiAgICB9KTtcblxufVxuXG5cblxuZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAvL+WQhOe9kemhtemDveebkeaOp1xuICAgIC8v5YiS6YCJXG4gICAgLy9UT0RPIGJ1ZyDlj5HnjrDnmb7luqbmkJzntKLkuIrpnaLliJLpgInku4XpnaBmb2N1c05vZGXmmK/ojrflj5bkuI3lhajnmoQs5o2i5oiQ6I635Y+W5Ymq5YiH5p2/55qE5a6e546wXG5cbiAgICAvLyBkb2N1bWVudC5vbnNlbGVjdGlvbmNoYW5nZSA9ICgpID0+IHtcbiAgICAvLyAgICAgbGV0IHM9ZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKHMpXG4gICAgLy8gICAgIGlmKHMuZm9jdXNOb2RlLmRhdGEpe1xuICAgIC8vICAgICAgICAgaWYocy5hbmNob3JPZmZzZXQ8cy5leHRlbnRPZmZzZXQpe1xuICAgIC8vICAgICAgICAgICAgIGNvcHlUZXh0PSBzLmZvY3VzTm9kZS5kYXRhLnNsaWNlKHMuYW5jaG9yT2Zmc2V0LHMuZXh0ZW50T2Zmc2V0KS50cmltKCk7XG4gICAgLy8gICAgICAgICB9ZWxzZXtcbiAgICAvLyAgICAgICAgICAgICBjb3B5VGV4dD0gcy5mb2N1c05vZGUuZGF0YS5zbGljZShzLmV4dGVudE9mZnNldCxzLmFuY2hvck9mZnNldCkudHJpbSgpO1xuICAgIC8vICAgICAgICAgfTtcbiAgICAvLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKGNvcHlUZXh0KVxuICAgIC8vICAgICB9XG4gICAgLy8gfTtcbiAgICBsZXQgcnVubmluZ1RleHQgPSBudWxsO1xuICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24oZSkge1xuICAgICAgICB2YXIga2V5Q29kZSA9IGUua2V5Q29kZSB8fCBlLndoaWNoIHx8IGUuY2hhckNvZGU7XG4gICAgICAgIHZhciBjdHJsS2V5ID0gZS5jdHJsS2V5IHx8IGUubWV0YUtleTtcbiAgICAgICAgLy9jb25zb2xlLmxvZygnY29weS0tLS0tLScsa2V5Q29kZSlcbiAgICAgICAgaWYgKGN0cmxLZXkgJiYga2V5Q29kZSA9PSA2Nykge1xuICAgICAgICAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgIGdldENsaXBib2FyZERhdGE6IHRydWVcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKHRleHQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGV4dCAmJiBydW5uaW5nVGV4dCAhPSB0ZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJ1bm5pbmdUZXh0ID0gdGV4dDtcbiAgICAgICAgICAgICAgICAgICAgbmV3VGV4dCh0ZXh0LCAocikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIH0sIGZhbHNlKTtcblxuXG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sYWtlLWNvbnRlbnQtZWRpdG9yLWNvcmUnKSkge1xuXG4gICAgICAgIC8v55Sx55So5oi35Li75Yqo6Kem5Y+RLGN0cmwoY21kKStzXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sYWtlLWNvbnRlbnQtZWRpdG9yLWNvcmUnKS5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIga2V5Q29kZSA9IGUua2V5Q29kZSB8fCBlLndoaWNoIHx8IGUuY2hhckNvZGU7XG4gICAgICAgICAgICB2YXIgY3RybEtleSA9IGUuY3RybEtleSB8fCBlLm1ldGFLZXk7XG4gICAgICAgICAgICBpZiAoY3RybEtleSAmJiBrZXlDb2RlID09IDgzKSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlQ29udGVudCgocmVzKSA9PiB7fSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9LCBmYWxzZSk7XG5cbiAgICAgICAgY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKGZ1bmN0aW9uKHJlcXVlc3QsIHNlbmRlciwgc2VuZFJlc3BvbnNlKSB7XG4gICAgICAgICAgICAvL+S4u+WKqOinpuWPkeaWsOe0oOadkOWFpeW6k1xuICAgICAgICAgICAgaWYgKHJlcXVlc3QuY21kID09ICd1cGRhdGVGcm9tQ29udGVudCcpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVDb250ZW50KChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL3N1Z2dlc3RUb3BpY1RhZ3NcbiAgICAgICAgICAgICAgICBzZW5kUmVzcG9uc2UoZG9jdW1lbnQuYm9keS5pbm5lclRleHQudHJpbSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9KTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRpbWVvdXQoaW5pdCwgMTAwMCk7XG4gICAgfTtcblxuXG5cbn07XG5cbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyh3aW5kb3cubG9jYXRpb24pXG4gICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCAhPSBcImNocm9tZS1leHRlbnNpb246XCIpIHtcbiAgICAgICAgaW5pdCgpO1xuICAgICAgICBiaW5kU2VsZWN0KCk7XG4gICAgICAgIGlzSGlnaGxpZ2h0U2l0ZSgpO1xuICAgICAgICBpc0luc2VydFRhcmdldFNpdGUoKHIpID0+IHtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2cocik7XG4gICAgICAgIH0pO1xuICAgIH1cblxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/contentScript.js\n");

/***/ })

/******/ });